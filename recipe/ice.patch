From 202e2a0990fbef3c0e00dae8335ceb378cd41426 Mon Sep 17 00:00:00 2001
From: Bart Janssens <bart@bartjanssens.org>
Date: Tue, 31 May 2022 00:08:41 +0200
Subject: [PATCH] Compilation fixes for GCC 12.1

---
 include/jlcxx/array.hpp          | 9 ++++++++-
 include/jlcxx/smart_pointers.hpp | 2 +-
 2 files changed, 9 insertions(+), 2 deletions(-)

diff --git a/include/jlcxx/array.hpp b/include/jlcxx/array.hpp
index 6d29ef3..0891384 100644
--- a/include/jlcxx/array.hpp
+++ b/include/jlcxx/array.hpp
@@ -27,11 +27,18 @@ struct ValueExtractor<PointedT, PointedT>
 };
 
 template<typename PointedT, typename CppT>
-class array_iterator_base : public std::iterator<std::random_access_iterator_tag, CppT>
+class array_iterator_base
 {
 private:
   PointedT* m_ptr;
 public:
+
+  using iterator_category = std::random_access_iterator_tag;
+  using value_type = CppT;
+  using difference_type = ptrdiff_t;
+  using pointer = CppT*;
+  using reference = CppT&;
+
   array_iterator_base() : m_ptr(nullptr)
   {
   }
diff --git a/include/jlcxx/smart_pointers.hpp b/include/jlcxx/smart_pointers.hpp
index 8bc824f..b773a2a 100644
--- a/include/jlcxx/smart_pointers.hpp
+++ b/include/jlcxx/smart_pointers.hpp
@@ -138,7 +138,7 @@ struct WrapSmartPointer
   {
     using WrappedT = typename TypeWrapperT::type;
     
-    wrapped.module().method("__cxxwrap_smartptr_dereference", DereferenceSmartPointer<WrappedT>::apply);
+    wrapped.module().method("__cxxwrap_smartptr_dereference", &DereferenceSmartPointer<WrappedT>::apply);
     wrapped.module().last_function().set_override_module(get_cxxwrap_module());
   }
 };
