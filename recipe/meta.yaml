{% set name = "libcxxwrap-julia" %}
{% set version = "0.9.2" %}
{% set sha256 = "af48c3d808889fb188a13882958b228ec7a11426b8325df9f410df15e0d4be29" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  fn: {{ name }}-{{ version }}.tar.gz
  url: https://github.com/JuliaInterop/libcxxwrap-julia/archive/v{{ version }}.tar.gz
  sha256: {{ sha256 }}

build:
  number: 0
  # Julia has not been packaged for conda on Windows
  skip: true  # [win]
  run_exports:
    - {{ pin_subpackage(name, max_pin='x.x') }}

requirements:
  build:
    - make
    - cmake
    - {{ compiler('cxx') }}
  host:
    - julia >=1.6,<1.9
  run:
    - julia >=1.6,<1.9

test:
  commands:
    - test -d ${PREFIX}/include/jlcxx  # [unix]
    - test -f ${PREFIX}/include/jlcxx/jlcxx.hpp  # [unix]
    - test -f ${PREFIX}/lib/cmake/JlCxx/JlCxxConfig.cmake  # [unix]
    - test -f ${PREFIX}/lib/cmake/JlCxx/JlCxxConfigVersion.cmake  # [unix]

    - if exist %LIBRARY_PREFIX%\include\JlCxx\jlcxx.hpp (exit 0) else (exit 1)  # [win]
    - if exist %LIBRARY_PREFIX%\lib\cmake\JlCxx\JlCxxConfig.cmake (exit 0) else (exit 1)  # [win]
    - if exist %LIBRARY_PREFIX%\lib\cmake\JlCxx\JlCxxConfigVersion.cmake (exit 0) else (exit 1)  # [win]

about:
  home: https://github.com/JuliaInterop/CxxWrap.jl
  license: MIT
  license_family: MIT
  license_file: LICENSE.md
  summary: Seamless operability between C++11 and Julia
  description: Lightweight library that exposes C++ types in Julia and vice versa
  doc_url: https://github.com/JuliaInterop/libcxxwrap-julia
  dev_url: https://github.com/JuliaInterop/libcxxwrap-julia

extra:
  recipe-maintainers:
    - SylvainCorlay
    - JohanMabille
    - barche
